<script>
  //froala instanciate
  let res = new FroalaEditor('#example', {

    // Set the image upload parameter.
    imageUploadParam: 'file',

    // // Set the image upload URL.
    imageUploadURL: '/?goto=<?=$this->datacrypt('ArticlesUploads')?>&action=<?=$this->datacrypt('Send')?>',

    // Additional upload params.
    imageUploadParams: { id: 'file_upload' },

    // Set request type.
    imageUploadMethod: 'POST',

    // Set max image size to 5MB.
    imageMaxSize: 5 * 1024 * 1024,

    // Allow to upload PNG and JPG.
    imageAllowedTypes: ['jpeg', 'jpg', 'png', 'gif', 'svg'],

    events: {

      // 'froalaEditor.html.get': function (e, editor) {
      //     if (editor.codeView.isActive()) {
      //         return editor.codeView.get();
      //     }
      // };

      'image.beforeUpload': function (images) {
        // Return false if you want to stop the image upload.
        //console.log(res.html.get())
      },
      'image.uploaded': function (response) {
        // Image was uploaded to the server.

      },
      'image.inserted': function ($img, response) {
        // Image was inserted in the editor.
      },
      'image.replaced': function ($img, response) {
        // Image was replaced in the editor.
      },
      'image.error': function (error, response) {
        // Bad link.
        if (error.code == 1) { }

        // No link in upload response.
        else if (error.code == 2) { }

        // Error during image upload.
        else if (error.code == 3) { }

        // Parsing response failed.
        else if (error.code == 4) { }

        // Image too text-large.
        else if (error.code == 5) { }

        // Invalid image type.
        else if (error.code == 6) { }

        // Image can be uploaded only to same domain in IE 8 and IE 9.
        else if (error.code == 7) { }

        // Response contains the original server response to the request if available.
      }
    }
  });

  document.getElementById("submit").addEventListener('click', () => {
    let html = res.html.get();
    let fenetre = window.location.href;
    let lien = fenetre.split("&")[1];
    let data = {
      code_html: html
    }
    data = JSON.stringify(data);
    let options = {
      header: {
        content: "application/json"
      },
      body: data,
      method: "post"
    }
    fetch("?ajax=article-controller&action=add-articles&" + lien, options).then(response => response.json()).then(response => {
      if(response === "Article_exist")
      {
        console.log("Article existant");
      } else {
        window.location.href = response;
      }
    })
  });

</script>